version: "3.9"

services:
  backend:
    restart: always
    build:
      context: ./backend
    command: sh entrypoint.sh
    ports:
      - "8000:8000"
    volumes:
      - ./backend:/app/backend
      - static_volume:/app/backend/static_files
    env_file:
      - .env
    depends_on:
      - db

  db:
    image: postgres:14-alpine
    volumes:
      - .backend/data/db:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}

  redis:
    image: redis:7-alpine

  celery:
    restart: always
    build: ./backend
    command: celery -A api worker -l info
    volumes:
      - ./backend:/app/backend
    env_file:
      - .env
    depends_on:
      - db
      - redis
      - backend

  beat:
    build: ./backend
    command: celery -A api beat -l info
    volumes:
      - ./backend:/app/backend
    env_file:
      - .env
    depends_on:
      - celery

  nginx:
    restart: always
    build:
      context: .
      dockerfile: ./nginx/Dockerfile
    ports:
      - 80:80
    volumes:
      - ./nginx/nginx-setup.conf:/etc/nginx/conf.d/default.conf:ro
      - static_volume:/app/backend/static_files
    depends_on:
      - backend

volumes:
  static_volume: